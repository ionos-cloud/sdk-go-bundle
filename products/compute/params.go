/*
 * CLOUD API
 *
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package compute

import (
	"fmt"
	"net/url"
)

type Params struct {
	filters         url.Values
	orderBy         *string
	maxResults      *int32
	pretty          *bool
	depth           *int32
	xContractNumber *int32
}

func (r Params) Pretty(pretty bool) Params {
	r.pretty = &pretty
	return r
}
func (r Params) Depth(depth int32) Params {
	r.depth = &depth
	return r
}
func (r Params) XContractNumber(xContractNumber int32) Params {
	r.xContractNumber = &xContractNumber
	return r
}

// Filters query parameters limit results to those containing a matching value for a specific property.
func (r Params) Filter(key string, value string) Params {
	filterKey := fmt.Sprintf("filter.%s", key)
	r.filters[filterKey] = append(r.filters[filterKey], value)
	return r
}

// OrderBy query param sorts the results alphanumerically in ascending order based on the specified property.
func (r Params) OrderBy(orderBy string) Params {
	r.orderBy = &orderBy
	return r
}

// MaxResults query param limits the number of results returned.
func (r Params) MaxResults(maxResults int32) Params {
	r.maxResults = &maxResults
	return r
}
